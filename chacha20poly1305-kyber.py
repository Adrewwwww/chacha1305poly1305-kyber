# Import requirements
import os
from pykymaster.ccakem import kem_keygen768, kem_encaps768, kem_decaps768
from chacha20poly1305 import ChaCha20Poly1305

# The recipient generates a public(sk)/private(pk) key pair using the Kyber key generation algorithm.
sk, pk = kem_keygen768()

# The sender uses the recipient's public key(pk) to generate a ciphertext(ct) and a shared secret(sss).
sss, ct = kem_encaps768(pk)
# Correct for negative values (add 256)
sss = [x + 256 if x < 0 else x for x in sss]

#Use the shared secret(ss) as a key for the ChaCha20-Poly1305
key = bytes(sss)
enc = ChaCha20Poly1305(key)
nonce = os.urandom(12)

# Encrypting the data using the shared secret generated by the sender
ciphertext = enc.encrypt(nonce, b'BSCS3A')

# The recipient uses their private key to recover the shared secret from the ciphertext.
rss = kem_decaps768(sk, ct)
# Correct for negative values (add 256)
rss = [x + 256 if x < 0 else x for x in rss]
key = bytes(rss)
dec = ChaCha20Poly1305(key)

# Decrypting Data by using the private key(sk) and the ciphertext(ct) to retrieved 
# the shared secret(rss) used as a symmentric key of the ChaCha20-Poly1305 
plaintext = dec.decrypt(nonce, ciphertext)

# Print the plain text
print(plaintext)